name: Python package

on: [push]

jobs:
  # # コンテナジョブのラベル
  # container-job:
  #   # コンテナはLinuxベースのオペレーティングシステム内で実行しなければならない
  #   runs-on: ubuntu-latest
  #   # `container-job`が実行されるDocker Hubのイメージ
  #   container: node:10.18-jessie

  #   # `container-job`と実行されるサービスコンテナ
  #   services:
  #     # サービスコンテナへのアクセスに使われるラベル
  #     postgres:
  #       # Docker Hubのイメージ
  #       image: postgres
  #       # postgresのパスワードを提供
  #       env:
  #         POSTGRES_PASSWORD: postgres
  #       # postgresが起動するまで待つヘルスチェックの設定
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          # 対応する要件ファイルにキャッシュヒットがあるかどうかを確認する
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # Python 構文エラーまたは未定義の名前がある場合はビルドを停止する
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zeroはすべてのエラーを警告として扱う。 GitHubのエディタの幅は127文字
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        env:
          YOUR_CHANNEL_SECRET: ${{ secrets.YOUR_CHANNEL_SECRET }}
          HOGE: "hoge"
          FUGA: ${{ secrets.FUGA }}
        run: |
          echo $YOUR_CHANNEL_SECRET
          echo $HOGE
          echo $FUGA
          pytest ./tests/test.py
